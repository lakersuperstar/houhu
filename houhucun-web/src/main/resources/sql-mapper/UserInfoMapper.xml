<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.houhucun.mapper.UserInfoMapper">
	<resultMap id="BaseResultMap" type="com.houhucun.domain.UserInfo">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="user_account" property="userAccount" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />

		<result column="create_account" property="createAccount"
			jdbcType="VARCHAR" />
		<result column="role" property="role" jdbcType="TINYINT" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="yn" property="yn" jdbcType="BIT" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, password, user_account, mobile,
		address, role,
		create_date, update_date,
		yn,create_account
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_info
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<select id="selectByAccount" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user_info
		where user_account = #{userAccount,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		user_info
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.houhucun.domain.UserInfo">
		insert into user_info
		(user_name, password,
		user_account, mobile, address,
		role, create_date,
		update_date,
		yn,create_account)
		values (#{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{userAccount,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{role,jdbcType=TINYINT}, now(), #{updateDate,jdbcType=TIMESTAMP},
		1,
		#{createAccount,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.houhucun.domain.UserInfo">
		insert into user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="userAccount != null">
				user_account,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="role != null">
				role,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="yn != null">
				yn,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userAccount != null">
				#{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				#{role,jdbcType=TINYINT},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="yn != null">
				#{yn,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.houhucun.domain.UserInfo">
		update user_info
		<set>
			<if test="userName != null and userName != ''">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null and password != ''">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userAccount != null and userAccount != ''">
				user_account = #{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null and mobile != ''">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="address != null and address != ''">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="role != null and role != 0">
				role = #{role,jdbcType=TINYINT},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="yn != null and yn != -1">
				yn = #{yn,jdbcType=BIT},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.houhucun.domain.UserInfo">
		update user_info
		set user_name = #{userName,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		user_account =
		#{userAccount,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		role = #{role,jdbcType=TINYINT},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_date =
		#{updateDate,jdbcType=TIMESTAMP},
		yn = #{yn,jdbcType=BIT}
		where user_id
		= #{userId,jdbcType=INTEGER}
	</update>

	<select id="countUserByParam" parameterType="com.houhucun.domain.UserInfoQueryVO"
		resultType="java.lang.Integer">
		select
		count(1) as countNum from user_info
		<where>
			<if test="userName != null ">
				user_name like CONCAT(CONCAT('%',
				#{userName,jdbcType=VARCHAR}),'%')
			</if>
			<if test="userAccount != null">
				and user_account like CONCAT(CONCAT('%',
				#{userAccount,jdbcType=VARCHAR}),'%')
			</if>
			<if test="mobile != null">
				and mobile like CONCAT(CONCAT('%',
				#{mobile,jdbcType=VARCHAR}),'%')
			</if>
			<if test="address != null">
				and address like CONCAT(CONCAT('%',
				#{address,jdbcType=VARCHAR}),'%')
			</if>
			<if test="createAccount != null and createAccount != ''">
				and create_account = #{createAccount}
			</if>
		</where>
	</select>

	<select id="findByParam" parameterType="com.houhucun.domain.UserInfoQueryVO"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_info
		<where>
			<if test="userName != null ">
				user_name like CONCAT(CONCAT('%',
				#{userName,jdbcType=VARCHAR}),'%')
			</if>
			<if test="userAccount != null">
				and user_account like CONCAT(CONCAT('%',
				#{userAccount,jdbcType=VARCHAR}),'%')
			</if>
			<if test="mobile != null">
				and mobile like CONCAT(CONCAT('%',
				#{mobile,jdbcType=VARCHAR}),'%')
			</if>
			<if test="address != null">
				and address like CONCAT(CONCAT('%',
				#{address,jdbcType=VARCHAR}),'%')
			</if>
			<if test="createAccount != null and createAccount != ''">
				and create_account = #{createAccount}
			</if>
		</where>
		limit #{startrownum} , #{pageSize}
	</select>
	<delete id="del" parameterType="java.lang.Integer">
		update user_info set yn = 0 where
		id = #{id}
	</delete>

	<select id="checkUser" parameterType="com.houhucun.domain.UserInfo"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_info
		where user_account = #{userAccount,jdbcType=VARCHAR}
	</select>

	<update id="updatePwd" parameterType="com.houhucun.domain.UserInfo">
		update user_info
		<set>
			<if test="password != null and password != ''">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>

</mapper>